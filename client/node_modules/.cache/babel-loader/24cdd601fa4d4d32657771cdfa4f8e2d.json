{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\renan\\\\Desktop\\\\react\\\\shopping-online\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\renan\\\\Desktop\\\\react\\\\shopping-online\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"C:\\\\Users\\\\renan\\\\Desktop\\\\react\\\\shopping-online\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\renan\\\\Desktop\\\\react\\\\shopping-online\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\renan\\\\Desktop\\\\react\\\\shopping-online\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import FormInput from\"./../form-input/form-input\";import CustomButton from\"../custom-button/custom-button\";import{SignInContainer,ButtonsBarContainer,SignInTitle,SignUpLinkContaniner,SignUpLink}from\"./sign-in.styles\";import{googleSignInStart as _googleSignInStart,emailSignInStart as _emailSignInStart}from\"../../redux/user/user.action\";import{connect}from\"react-redux\";var SignIn=function SignIn(_ref){var emailSignInStart=_ref.emailSignInStart,googleSignInStart=_ref.googleSignInStart;var _useState=useState({email:\"\",password:\"\"}),_useState2=_slicedToArray(_useState,2),userCredentials=_useState2[0],setCredentials=_useState2[1];var email=userCredentials.email,password=userCredentials.password;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();emailSignInStart(email,password);case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,value=_event$target.value,name=_event$target.name;setCredentials(_objectSpread({},userCredentials,_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(SignInContainer,null,/*#__PURE__*/React.createElement(SignInTitle,null,\"I already have an account\"),/*#__PURE__*/React.createElement(\"span\",null,\"Sign in with your email and password\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormInput,{name:\"email\",type:\"email\",value:email,handleChange:handleChange,label:\"email\",required:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"password\",type:\"password\",value:password,handleChange:handleChange,label:\"password\",required:true}),/*#__PURE__*/React.createElement(ButtonsBarContainer,null,/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\"Sign in\"),/*#__PURE__*/React.createElement(CustomButton,{type:\"button\",onClick:googleSignInStart,isGoogleSignIn:true},\"Sign in with Google\"))),/*#__PURE__*/React.createElement(SignUpLinkContaniner,null,/*#__PURE__*/React.createElement(SignUpLink,{to:\"signup\"},\"I do not have a account\")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{googleSignInStart:function googleSignInStart(){return dispatch(_googleSignInStart());},emailSignInStart:function emailSignInStart(email,password){return dispatch(_emailSignInStart({email:email,password:password}));}};};export default connect(null,mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/renan/Desktop/react/shopping-online/client/src/components/sign-in/sign-in.js"],"names":["React","useState","FormInput","CustomButton","SignInContainer","ButtonsBarContainer","SignInTitle","SignUpLinkContaniner","SignUpLink","googleSignInStart","emailSignInStart","connect","SignIn","email","password","userCredentials","setCredentials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"u4BAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,OACEC,eADF,CAEEC,mBAFF,CAGEC,WAHF,CAIEC,oBAJF,CAKEC,UALF,KAMO,kBANP,CAOA,OACEC,iBAAiB,GAAjBA,CAAAA,kBADF,CAEEC,gBAAgB,GAAhBA,CAAAA,iBAFF,KAGO,8BAHP,CAIA,OAASC,OAAT,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA6C,IAA1CF,CAAAA,gBAA0C,MAA1CA,gBAA0C,CAAxBD,iBAAwB,MAAxBA,iBAAwB,eAChBR,QAAQ,CAAC,CACjDY,KAAK,CAAE,EAD0C,CAEjDC,QAAQ,CAAE,EAFuC,CAAD,CADQ,wCACnDC,eADmD,eAClCC,cADkC,kBAMlDH,CAAAA,KANkD,CAM9BE,eAN8B,CAMlDF,KANkD,CAM3CC,QAN2C,CAM9BC,eAN8B,CAM3CD,QAN2C,CAO1D,GAAMG,CAAAA,YAAY,2FAAG,iBAAOC,KAAP,kHACnBA,KAAK,CAACC,cAAN,GAEAT,gBAAgB,CAACG,KAAD,CAAQC,QAAR,CAAhB,CAHmB,sDAAH,kBAAZG,CAAAA,YAAY,6CAAlB,CAMA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACF,KAAD,CAAW,mBACNA,KAAK,CAACG,MADA,CACtBC,KADsB,eACtBA,KADsB,CACfC,IADe,eACfA,IADe,CAE9BP,cAAc,kBAAMD,eAAN,oBAAwBQ,IAAxB,CAA+BD,KAA/B,GAAd,CACD,CAHD,CAKA,mBACE,oBAAC,eAAD,mBACE,oBAAC,WAAD,kCADF,cAEE,uEAFF,cAIE,4BAAM,QAAQ,CAAEL,YAAhB,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAEJ,KAHT,CAIE,YAAY,CAAEO,YAJhB,CAKE,KAAK,CAAC,OALR,CAME,QAAQ,KANV,EADF,cASE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEN,QAHT,CAIE,YAAY,CAAEM,YAJhB,CAKE,KAAK,CAAC,UALR,CAME,QAAQ,KANV,EATF,cAiBE,oBAAC,mBAAD,mBACE,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,YADF,cAEE,oBAAC,YAAD,EACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAEX,iBAFX,CAGE,cAAc,KAHhB,wBAFF,CAjBF,CAJF,cAgCE,oBAAC,oBAAD,mBACE,oBAAC,UAAD,EAAY,EAAE,CAAC,QAAf,4BADF,CAhCF,CADF,CAsCD,CAxDD,CA0DA,GAAMe,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxChB,iBAAiB,CAAE,mCAAMgB,CAAAA,QAAQ,CAAChB,kBAAiB,EAAlB,CAAd,EADqB,CAExCC,gBAAgB,CAAE,0BAACG,KAAD,CAAQC,QAAR,QAChBW,CAAAA,QAAQ,CAACf,iBAAgB,CAAC,CAAEG,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAD,CAAjB,CADQ,EAFsB,CAAf,EAA3B,CAMA,cAAeH,CAAAA,OAAO,CAAC,IAAD,CAAOa,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport FormInput from \"./../form-input/form-input\";\nimport CustomButton from \"../custom-button/custom-button\";\nimport {\n  SignInContainer,\n  ButtonsBarContainer,\n  SignInTitle,\n  SignUpLinkContaniner,\n  SignUpLink,\n} from \"./sign-in.styles\";\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.action\";\nimport { connect } from \"react-redux\";\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [userCredentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = userCredentials;\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <SignInContainer>\n      <SignInTitle>I already have an account</SignInTitle>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          handleChange={handleChange}\n          label=\"email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"password\"\n          required\n        />\n        <ButtonsBarContainer>\n          <CustomButton type=\"submit\">Sign in</CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign in with Google\n          </CustomButton>\n        </ButtonsBarContainer>\n      </form>\n      <SignUpLinkContaniner>\n        <SignUpLink to=\"signup\">I do not have a account</SignUpLink>\n      </SignUpLinkContaniner>\n    </SignInContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}