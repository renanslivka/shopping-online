{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renan\\\\Desktop\\\\react\\\\shopping-online\\\\client\\\\src\\\\components\\\\cart-item\\\\cart-item.js\";\nimport React from \"react\";\nimport { CartItemContainer, ItemDetailsContainer, CartItemImage, RemoveButtonContainer } from \"./cart-item.styles\";\nimport { clearItemFromCart\n/*  addItem,\nremoveItem */\n} from \"./../../redux/cart/cart.action\";\nimport { connect } from \"react-redux\";\n\nconst CartItem = ({\n  item: {\n    imageUrl,\n    price,\n    name,\n    quantity\n  },\n  clearItem,\n  item\n}) => /*#__PURE__*/React.createElement(CartItemContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(CartItemImage, {\n  src: imageUrl,\n  alt: \"item\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(ItemDetailsContainer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 7\n  }\n}, name), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n}, quantity, \" x $\", price)), /*#__PURE__*/React.createElement(RemoveButtonContainer, {\n  onClick: () => clearItem(item),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, \"\\u2715\"));\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item))\n  /*   addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item)) */\n\n});\n\nexport default connect(null, mapDispatchToProps)(React.memo(CartItem));","map":{"version":3,"sources":["C:/Users/renan/Desktop/react/shopping-online/client/src/components/cart-item/cart-item.js"],"names":["React","CartItemContainer","ItemDetailsContainer","CartItemImage","RemoveButtonContainer","clearItemFromCart","connect","CartItem","item","imageUrl","price","name","quantity","clearItem","mapDispatchToProps","dispatch","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,oBAFF,EAGEC,aAHF,EAIEC,qBAJF,QAKO,oBALP;AAMA,SACEC;AACA;;AAFF,OAIO,gCAJP;AAMA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,GADU;AAEhBC,EAAAA,SAFgB;AAGhBL,EAAAA;AAHgB,CAAD,kBAKf,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,aAAD;AAAe,EAAA,GAAG,EAAEC,QAApB;AAA8B,EAAA,GAAG,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOE,IAAP,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGC,QADH,UACiBF,KADjB,CAFF,CAFF,eAQE,oBAAC,qBAAD;AAAuB,EAAA,OAAO,EAAE,MAAMG,SAAS,CAACL,IAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CALF;;AAoBA,MAAMM,kBAAkB,GAAIC,QAAD,KAAe;AACxCF,EAAAA,SAAS,EAAGL,IAAD,IAAUO,QAAQ,CAACV,iBAAiB,CAACG,IAAD,CAAlB;AAC7B;;;AAFwC,CAAf,CAA3B;;AAMA,eAAeF,OAAO,CAAC,IAAD,EAAOQ,kBAAP,CAAP,CAAkCd,KAAK,CAACgB,IAAN,CAAWT,QAAX,CAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport {\n  CartItemContainer,\n  ItemDetailsContainer,\n  CartItemImage,\n  RemoveButtonContainer,\n} from \"./cart-item.styles\";\nimport {\n  clearItemFromCart,\n  /*  addItem,\n  removeItem */\n} from \"./../../redux/cart/cart.action\";\n\nimport { connect } from \"react-redux\";\n\nconst CartItem = ({\n  item: { imageUrl, price, name, quantity },\n  clearItem,\n  item,\n}) => (\n  <CartItemContainer>\n    <CartItemImage src={imageUrl} alt=\"item\" />\n    <ItemDetailsContainer>\n      <span>{name}</span>\n      <span>\n        {quantity} x ${price}\n      </span>\n    </ItemDetailsContainer>\n    <RemoveButtonContainer onClick={() => clearItem(item)}>\n      &#10005;\n      {/* &#10005 is utf-8 Dingbats */}\n    </RemoveButtonContainer>\n  </CartItemContainer>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearItem: (item) => dispatch(clearItemFromCart(item)),\n  /*   addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item)) */\n});\n\nexport default connect(null, mapDispatchToProps)(React.memo(CartItem));\n"]},"metadata":{},"sourceType":"module"}