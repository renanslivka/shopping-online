{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\renan\\\\Desktop\\\\react\\\\shopping-online\\\\src\\\\pages\\\\shop\\\\shop.js\";\nimport React, { Component } from \"react\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport { connect } from \"react-redux\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, Object.assign({\n      exact: true,\n      path: `${match.path}`,\n      render: props => CollectionsOverviewWithSpinner,\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Route, Object.assign({\n      path: `${match.path}/:collectionId`,\n      render: props => CollectionPageWithSpinner,\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/renan/Desktop/react/shopping-online/src/pages/shop/shop.js"],"names":["React","Component","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","connect","CollectionsOverviewWithSpinner","WithSpinner","CollectionPageWithSpinner","ShopPage","state","loading","unSubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,0DAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAMC,8BAA8B,GAAGC,WAAW,CAACR,mBAAD,CAAlD;AACA,MAAMS,yBAAyB,GAAGD,WAAW,CAACN,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BY,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE;AADH,KADuB;AAAA,SAI/BC,uBAJ+B,GAIL,IAJK;AAAA;;AAM/BC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,cAAc,GAAGjB,+BAA+B,CAACgB,QAAD,CAAtD;AACAf,MAAAA,iBAAiB,CAACgB,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKT,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAEV,KAAK,IAAIR,8BAHnB;AAIE,MAAA,SAAS,EAAEK;AAJb,OAKMG,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,eAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEV,KAAK,IAAIN,yBAFnB;AAGE,MAAA,SAAS,EAAEG;AAHb,OAIMG,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARF,CADF;AAiBD;;AArC8B;;AAwCjC,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCtB,EAAAA,iBAAiB,EAAEgB,cAAc,IAC/BM,QAAQ,CAACtB,iBAAiB,CAACgB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAef,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport CollectionsOverview from \"../../components/collection-overview/collection-overview\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\nimport { connect } from \"react-redux\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  state = {\n    loading: true\n  };\n  unSubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => CollectionsOverviewWithSpinner}\n          isLoading={loading}\n          {...props}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => CollectionPageWithSpinner}\n          isLoading={loading}\n          {...props}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap =>\n    dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}