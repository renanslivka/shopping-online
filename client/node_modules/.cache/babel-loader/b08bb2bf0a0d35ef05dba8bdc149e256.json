{"ast":null,"code":"import React from\"react\";import{CartItemContainer,ItemDetailsContainer,CartItemImage,RemoveButtonContainer}from\"./cart-item.styles\";import{clearItemFromCart/*  addItem,\n  removeItem */}from\"./../../redux/cart/cart.action\";import{connect}from\"react-redux\";var CartItem=function CartItem(_ref){var _ref$item=_ref.item,imageUrl=_ref$item.imageUrl,price=_ref$item.price,name=_ref$item.name,quantity=_ref$item.quantity,clearItem=_ref.clearItem,item=_ref.item;return/*#__PURE__*/React.createElement(CartItemContainer,null,/*#__PURE__*/React.createElement(CartItemImage,{src:imageUrl,alt:\"item\"}),/*#__PURE__*/React.createElement(ItemDetailsContainer,null,/*#__PURE__*/React.createElement(\"span\",null,name),/*#__PURE__*/React.createElement(\"span\",null,quantity,\" x $\",price)),/*#__PURE__*/React.createElement(RemoveButtonContainer,{onClick:function onClick(){return clearItem(item);}},\"\\u2715\"));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{clearItem:function clearItem(item){return dispatch(clearItemFromCart(item));}/*   addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item)) */};};export default connect(null,mapDispatchToProps)(React.memo(CartItem));","map":{"version":3,"sources":["C:/Users/renan/Desktop/react/shopping-online/client/src/components/cart-item/cart-item.js"],"names":["React","CartItemContainer","ItemDetailsContainer","CartItemImage","RemoveButtonContainer","clearItemFromCart","connect","CartItem","item","imageUrl","price","name","quantity","clearItem","mapDispatchToProps","dispatch","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,iBADF,CAEEC,oBAFF,CAGEC,aAHF,CAIEC,qBAJF,KAKO,oBALP,CAMA,OACEC,iBACA;eAFF,KAIO,gCAJP,CAMA,OAASC,OAAT,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,0BACfC,IADe,CACPC,QADO,WACPA,QADO,CACGC,KADH,WACGA,KADH,CACUC,IADV,WACUA,IADV,CACgBC,QADhB,WACgBA,QADhB,CAEfC,SAFe,MAEfA,SAFe,CAGfL,IAHe,MAGfA,IAHe,oBAKf,oBAAC,iBAAD,mBACE,oBAAC,aAAD,EAAe,GAAG,CAAEC,QAApB,CAA8B,GAAG,CAAC,MAAlC,EADF,cAEE,oBAAC,oBAAD,mBACE,gCAAOE,IAAP,CADF,cAEE,gCACGC,QADH,QACiBF,KADjB,CAFF,CAFF,cAQE,oBAAC,qBAAD,EAAuB,OAAO,CAAE,yBAAMG,CAAAA,SAAS,CAACL,IAAD,CAAf,EAAhC,WARF,CALe,EAAjB,CAoBA,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCF,SAAS,CAAE,mBAACL,IAAD,QAAUO,CAAAA,QAAQ,CAACV,iBAAiB,CAACG,IAAD,CAAlB,CAAlB,EACX;mDAFwC,CAAf,EAA3B,CAMA,cAAeF,CAAAA,OAAO,CAAC,IAAD,CAAOQ,kBAAP,CAAP,CAAkCd,KAAK,CAACgB,IAAN,CAAWT,QAAX,CAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport {\n  CartItemContainer,\n  ItemDetailsContainer,\n  CartItemImage,\n  RemoveButtonContainer,\n} from \"./cart-item.styles\";\nimport {\n  clearItemFromCart,\n  /*  addItem,\n  removeItem */\n} from \"./../../redux/cart/cart.action\";\n\nimport { connect } from \"react-redux\";\n\nconst CartItem = ({\n  item: { imageUrl, price, name, quantity },\n  clearItem,\n  item,\n}) => (\n  <CartItemContainer>\n    <CartItemImage src={imageUrl} alt=\"item\" />\n    <ItemDetailsContainer>\n      <span>{name}</span>\n      <span>\n        {quantity} x ${price}\n      </span>\n    </ItemDetailsContainer>\n    <RemoveButtonContainer onClick={() => clearItem(item)}>\n      &#10005;\n      {/* &#10005 is utf-8 Dingbats */}\n    </RemoveButtonContainer>\n  </CartItemContainer>\n);\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearItem: (item) => dispatch(clearItemFromCart(item)),\n  /*   addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item)) */\n});\n\nexport default connect(null, mapDispatchToProps)(React.memo(CartItem));\n"]},"metadata":{},"sourceType":"module"}