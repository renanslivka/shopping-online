{"version":3,"sources":["pages/collection/collection.styles.js","pages/collection/collection.js","pages/collection/collection.container.js","redux/shop/shop.selectors.js","components/with-spinner/with-spinner.js","components/collection-item/collection-item.styles.js","components/collection-item/collection-item.js"],"names":["CollectionPageContainer","styled","div","CollectionTitle","h2","CollectionItemsContainer","connect","state","ownProps","collection","selectCollection","match","params","collectionId","title","items","map","item","key","id","mapStateToProps","createStructuredSelector","isLoading","selectIsCollectionLoaded","compose","WithSpinner","CollectionPage","selectShop","shop","selectCollections","createSelector","collections","collectionUrlParam","selectCollectionsForPreview","Object","keys","selectIsCollectionFetching","isFetching","WrappedComponent","otherProps","CollectionItemContainer","AddButton","CustomButton","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","PriceContainer","dispatch","addItem","name","price","className","onClick","inverted"],"mappings":"8tBAEO,IAAMA,EAA0BC,IAAOC,IAAV,KAKvBC,EAAkBF,IAAOG,GAAV,KAKfC,EAA2BJ,IAAOC,IAAV,KCmBtBI,eAJS,SAACC,EAAOC,GAAR,MAAsB,CAC5CC,WAAYC,YAAiBF,EAASG,MAAMC,OAAOC,aAAvCH,CAAqDH,MAGpDD,EAlBQ,SAAC,GAAoB,IAAlBG,EAAiB,EAAjBA,WAChBK,EAAiBL,EAAjBK,MAAOC,EAAUN,EAAVM,MACf,OACE,kBAACf,EAAD,KACE,kBAACG,EAAD,KAAkBW,GAClB,kBAACT,EAAD,KACGU,EAAMC,KAAI,SAAAC,GAAI,OACb,kBAAC,IAAD,CAAgBC,IAAKD,EAAKE,GAAIF,KAAMA,Y,QCbxCG,EAAkBC,YAAyB,CAC/CC,UAAW,SAAAf,GAAK,OAAKgB,YAAyBhB,MAG1CP,EAA0BwB,YAC9BlB,YAAQc,GACRK,IAF8BD,CAG9BE,GAEa1B,a,gCChBf,oJAEM2B,EAAa,SAAApB,GAAK,OAAIA,EAAMqB,MAErBC,EAAoBC,YAC/B,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKG,eAGFrB,EAAmB,SAAAsB,GAAkB,OAChDF,YAAe,CAACD,IAAoB,SAAAE,GAAW,OAC7CA,EAAcA,EAAYC,GAAsB,SAGvCC,EAA8BH,YACzC,CAACD,IACD,SAAAE,GAAW,OACTA,EAAcG,OAAOC,KAAKJ,GAAaf,KAAI,SAAAE,GAAG,OAAIa,EAAYb,MAAQ,MAG7DkB,EAA6BN,YACxC,CAACH,IACD,SAAAC,GAAI,OAAIA,EAAKS,cAGFd,EAA2BO,YACtC,CAACH,IACD,SAAAC,GAAI,QAAMA,EAAKG,gB,oECnBFN,IAJK,SAACa,GAAD,OAAsB,YAAmC,IAAhChB,EAA+B,EAA/BA,UAAciB,EAAiB,6BAC1E,OAAOjB,EAAY,kBAAC,IAAD,MAAc,kBAACgB,EAAqBC,M,s9CCFlD,IAAMC,EAA0BvC,IAAOC,IAAV,KA6BvBuC,EAAYxC,YAAOyC,IAAPzC,CAAH,KAcT0C,EAAkB1C,IAAOC,IAAV,KAMN,gBAAG0C,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGTC,EAA4B5C,IAAOC,IAAV,KAQzB4C,EAAgB7C,IAAO8C,KAAV,KAKbC,EAAiB/C,IAAO8C,KAAV,KCpCZzC,gBAAQ,MAJI,SAAC2C,GAAD,MAAe,CACxCC,QAAS,SAACjC,GAAD,OAAUgC,EAASC,YAAQjC,QAGvBX,EApBQ,SAAC,GAAuB,IAArBW,EAAoB,EAApBA,KAAMiC,EAAc,EAAdA,QACtBC,EAA0BlC,EAA1BkC,KAAMC,EAAoBnC,EAApBmC,MAAOR,EAAa3B,EAAb2B,SACrB,OACE,kBAACJ,EAAD,KACE,kBAACG,EAAD,CAAiBU,UAAU,QAAQT,SAAUA,IAC7C,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAgBK,GAChB,kBAACH,EAAD,KAAiBI,EAAjB,MAEF,kBAACX,EAAD,CAAWa,QAAS,kBAAMJ,EAAQjC,IAAOsC,UAAQ,GAAjD","file":"static/js/6.6f314805.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const CollectionPageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const CollectionTitle = styled.h2`\r\n  font-size: 38px;\r\n  margin: 0 auto 30px;\r\n`;\r\n\r\nexport const CollectionItemsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n  & > div {\r\n    margin-bottom: 30px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 15px;\r\n  }\r\n`;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CollectionItem from \"../../components/collection-item/collection-item\";\n\nimport { selectCollection } from \"../../redux/shop/shop.selectors\";\n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from \"./collection.styles\";\n\nconst CollectionPage = ({ collection }) => {\n  const { title, items } = collection;\n  return (\n    <CollectionPageContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n      <CollectionItemsContainer>\n        {items.map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </CollectionItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { selectIsCollectionLoaded } from \"./../../redux/shop/shop.selectors\";\r\nimport CollectionPage from \"./collection\";\r\nimport WithSpinner from \"./../../components/with-spinner/with-spinner\";\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isLoading: state => !selectIsCollectionLoaded(state)\r\n});\r\n\r\nconst CollectionPageContainer = compose(\r\n  connect(mapStateToProps),\r\n  WithSpinner\r\n)(CollectionPage);\r\n\r\nexport default CollectionPageContainer;\r\n","import { createSelector } from \"reselect\";\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  shop => shop.collections\n);\n\nexport const selectCollection = collectionUrlParam =>\n  createSelector([selectCollections], collections =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  collections =>\n    collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  shop => shop.isFetching\n);\n\nexport const selectIsCollectionLoaded = createSelector(\n  [selectShop],\n  shop => !!shop.collections //!!0 = false, !!''= false, !!null = false, !!{} = true\n);\n","import React from \"react\";\r\n\r\nimport Spinner from \"../spinner/spinner\";\r\n\r\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import styled from \"styled-components\";\r\nimport CustomButton from \"../custom-button/custom-button\";\r\n\r\nexport const CollectionItemContainer = styled.div`\r\n  width: 22vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 350px;\r\n  align-items: center;\r\n  position: relative;\r\n  &:hover {\r\n    .image {\r\n      opacity: 0.8;\r\n    }\r\n    button {\r\n      opacity: 0.85;\r\n      display: flex;\r\n    }\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 40vw;\r\n    &:hover {\r\n      .image {\r\n        opacity: unset;\r\n      }\r\n      button {\r\n        opacity: unset;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const AddButton = styled(CustomButton)`\r\n  width: 80%;\r\n  opacity: 0.7;\r\n  position: absolute;\r\n  top: 255px;\r\n  display: none;\r\n  @media screen and (max-width: 800px) {\r\n    display: block;\r\n    opacity: 0.9;\r\n    min-width: unset;\r\n    padding: 0 10px;\r\n  }\r\n`;\r\n\r\nexport const BackgroundImage = styled.div`\r\n  width: 100%;\r\n  height: 95%;\r\n  background-size: cover;\r\n  background-position: center;\r\n  margin-bottom: 5px;\r\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\r\n`;\r\n\r\nexport const CollectionFooterContainer = styled.div`\r\n  width: 100%;\r\n  height: 5%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const NameContainer = styled.span`\r\n  width: 90%;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const PriceContainer = styled.span`\r\n  width: 10%;\r\n  text-align: right;\r\n`;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../../redux/cart/cart.action\";\nimport {\n  CollectionItemContainer,\n  BackgroundImage,\n  CollectionFooterContainer,\n  NameContainer,\n  PriceContainer,\n  AddButton,\n} from \"./collection-item.styles\";\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, price, imageUrl } = item;\n  return (\n    <CollectionItemContainer>\n      <BackgroundImage className=\"image\" imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <PriceContainer>{price}$</PriceContainer>\n      </CollectionFooterContainer>\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n"],"sourceRoot":""}