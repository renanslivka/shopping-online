{"version":3,"sources":["components/checkout-item/checkout-item.styles.js","components/checkout-item/checkout-item.js","components/stripe-button/stripe-button.js","pages/checkout/checkout.styles.js","pages/checkout/checkout.js"],"names":["CheckoutItemContainer","styled","div","ImageContainer","TextContainer","span","QuantityContainer","RemoveButtonContainer","connect","dispatch","clearItem","item","clearItemFromCart","addItem","removeItem","cartItem","name","imageUrl","price","quantity","src","alt","onClick","clearCart","priceForStripe","lable","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","headers","data","then","response","alert","catch","error","console","log","stripeKey","CheckoutPageContainer","CheckoutHeaderContainer","HeaderBlockContainer","TotalContainer","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","key","id","style","margin"],"mappings":"m7BAEO,IAAMA,EAAwBC,IAAOC,IAAV,KAUrBC,EAAiBF,IAAOC,IAAV,KASdE,EAAgBH,IAAOI,KAAV,KAIbC,EAAoBL,YAAOG,EAAPH,CAAH,KAUjBM,EAAwBN,IAAOC,IAAV,KCQnBM,cAAQ,MANI,SAAAC,GAAQ,MAAK,CACtCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,KAC9CE,QAAS,SAAAF,GAAI,OAAIF,EAASI,YAAQF,KAClCG,WAAY,SAAAH,GAAI,OAAIF,EAASK,YAAWH,QAG3BH,EA5BM,SAAC,GAAkD,IAAhDO,EAA+C,EAA/CA,SAAUL,EAAqC,EAArCA,UAAWG,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC5CE,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACE,kBAACnB,EAAD,KACE,kBAACG,EAAD,KACE,yBAAKiB,IAAKH,EAAUI,IAAI,UAE1B,kBAACjB,EAAD,KAAgBY,GAChB,kBAACV,EAAD,KACE,yBAAKgB,QAAS,kBAAMR,EAAWC,KAA/B,UACA,8BAAOI,GACP,yBAAKG,QAAS,kBAAMT,EAAQE,KAA5B,WAEF,kBAACX,EAAD,KAAgBc,GAChB,kBAACX,EAAD,CAAuBe,QAAS,kBAAMZ,EAAUK,KAAhD,c,oCC0BSP,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCc,UAAW,kBAAMd,EAASc,mBAGbf,EAjDc,SAAC,GAA0B,IAAxBU,EAAuB,EAAvBA,MAAOK,EAAgB,EAAhBA,UAC/BC,EAAyB,IAARN,EA4BvB,OACE,kBAAC,IAAD,CACEO,MAAM,UACNT,KAAK,kBACLU,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,yBAAoBX,GAC/BY,OAAQN,EACRO,WAAW,UACXC,MAnCY,SAACA,GACfC,IAAM,CACJC,IAAK,gCACLC,OAAQ,OACRC,QAAS,CACP,8BAA+B,IAC/B,eAAgB,oBAElBC,KAAM,CACJP,OAAQN,EACRQ,MAAOA,KAGRM,MAAK,SAACC,GACLC,MAAM,qBACNjB,OAEDkB,OAAM,SAACC,GACNC,QAAQC,IAAI,kBAAmBF,GAC/BF,MACE,gGAgBJK,UAtCmB,kD,m/BCNlB,IAAMC,EAAwB7C,IAAOC,IAAV,KAkBrB6C,EAA0B9C,IAAOC,IAAV,KAQvB8C,EAAuB/C,IAAOC,IAAV,KAQpB+C,EAAiBhD,IAAOC,IAAV,KCerBgD,GDT0BjD,IAAOC,IAAV,KCSLiD,YAAyB,CAC/CC,UAAWC,IACXC,MAAOC,OAGM/C,sBAAQ0C,EAAR1C,EAzCM,SAAC,GAAD,IAAG4C,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACnB,kBAACR,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,0CAEF,kBAACA,EAAD,KACE,8CAEF,kBAACA,EAAD,KACE,0CAEF,kBAACA,EAAD,KACE,wCAEF,kBAACA,EAAD,KACE,0CAGHI,EAAUI,KAAI,SAACzC,GAAD,OACb,kBAAC,EAAD,CAAcA,SAAUA,EAAU0C,IAAK1C,EAAS2C,QAElD,kBAACT,EAAD,KACE,yCAAeK,IAOjB,yBAAKK,MAAO,CAAEC,OAAQ,SACpB,kBAAC,EAAD,CAAsB1C,MAAOoC","file":"static/js/10.30f0601e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const TextContainer = styled.span`\n  width: 23%;\n`;\n\nexport const QuantityContainer = styled(TextContainer)`\n  display: flex;\n  span {\n    margin: 0 10px;\n  }\n  div {\n    cursor: pointer;\n  }\n`;\n\nexport const RemoveButtonContainer = styled.div`\n  padding-left: 12px;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  clearItemFromCart,\n  addItem,\n  removeItem\n} from \"./../../redux/cart/cart.action\";\nimport {\n  CheckoutItemContainer,\n  ImageContainer,\n  TextContainer,\n  QuantityContainer,\n  RemoveButtonContainer\n} from \"./checkout-item.styles\";\n\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n  return (\n    <CheckoutItemContainer>\n      <ImageContainer>\n        <img src={imageUrl} alt=\"item\" />\n      </ImageContainer>\n      <TextContainer>{name}</TextContainer>\n      <QuantityContainer>\n        <div onClick={() => removeItem(cartItem)}>&#10094;</div>\n        <span>{quantity}</span>\n        <div onClick={() => addItem(cartItem)}>&#10095;</div>\n      </QuantityContainer>\n      <TextContainer>{price}</TextContainer>\n      <RemoveButtonContainer onClick={() => clearItem(cartItem)}>\n        &#10005;\n        {/* &#10005 is utf-8 Dingbats */}\n      </RemoveButtonContainer>\n    </CheckoutItemContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item)),\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);\n","import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport { clearCart } from \"./../../redux/cart/cart.action\";\nimport { connect } from \"react-redux\";\n\nconst StripeCheckoutButton = ({ price, clearCart }) => {\n  const priceForStripe = price * 100;\n  const publishablekey = \"pk_test_gT3FbMxkzpsHq3ssZKigvm7v00q2gXFa1O\";\n\n  const onToken = (token) => {\n    axios({\n      url: \"http://localhost:5000/payment\",\n      method: \"post\",\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Content-Type\": \"application/json\",\n      },\n      data: {\n        amount: priceForStripe,\n        token: token,\n      },\n    })\n      .then((response) => {\n        alert(\"succesful payment\");\n        clearCart();\n      })\n      .catch((error) => {\n        console.log(\"Payment Error: \", error);\n        alert(\n          \"There was an issue with your payment! Please make sure you use the provided credit card.\"\n        );\n      });\n  };\n\n  return (\n    <StripeCheckout\n      lable=\"Pay Now\"\n      name=\"Shopping Online\"\n      billingAddress\n      shippingAddress\n      image=\"https://svgshare.com/i/CUz.svg\"\n      description={`Your total is $${price}`}\n      amount={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishablekey}\n    />\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearCart: () => dispatch(clearCart()),\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);\n","import styled from \"styled-components\";\r\n\r\nexport const CheckoutPageContainer = styled.div`\r\n  width: 55%;\r\n  min-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 50px auto 0;\r\n  button {\r\n    margin-left: auto;\r\n    margin-top: 50px;\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    width: 85%;\r\n    min-height: 0vh;\r\n    margin: 20px auto 0;\r\n  }\r\n`;\r\n\r\nexport const CheckoutHeaderContainer = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-bottom: 1px solid darkgrey;\r\n`;\r\n\r\nexport const HeaderBlockContainer = styled.div`\r\n  text-transform: capitalize;\r\n  width: 23%;\r\n  &:last-child {\r\n    width: 8%;\r\n  }\r\n`;\r\n\r\nexport const TotalContainer = styled.div`\r\n  margin-top: 30px;\r\n  margin-left: auto;\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  text-align: center;\r\n  margin-top: 40px;\r\n  font-size: 24px;\r\n  color: red;\r\n`;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectCartTotal } from \"../../redux/cart/cart.selector\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCartItems } from \"./../../redux/cart/cart.selector\";\nimport CheckoutItem from \"../../components/checkout-item/checkout-item\";\nimport StripeCheckoutButton from \"./../../components/stripe-button/stripe-button\";\nimport {\n  CheckoutPageContainer,\n  CheckoutHeaderContainer,\n  HeaderBlockContainer,\n  /* WarningContainer, */\n  TotalContainer,\n} from \"./checkout.styles\";\n\nconst CheckoutPage = ({ cartItems, total }) => (\n  <CheckoutPageContainer>\n    <CheckoutHeaderContainer>\n      <HeaderBlockContainer>\n        <span>Product</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Description</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Quantiy</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>price</span>\n      </HeaderBlockContainer>\n      <HeaderBlockContainer>\n        <span>Remove</span>\n      </HeaderBlockContainer>\n    </CheckoutHeaderContainer>\n    {cartItems.map((cartItem) => (\n      <CheckoutItem cartItem={cartItem} key={cartItem.id} />\n    ))}\n    <TotalContainer>\n      <span>TOTAL: ${total}</span>\n    </TotalContainer>\n    {/* <WarningContainer>\n      *please use the following test credit card for payments*\n      <br />\n      4242 4242 4242 4242 Exp: 01/21 - CVV 123\n    </WarningContainer> */}\n    <div style={{ margin: \"10px\" }}>\n      <StripeCheckoutButton price={total} />\n    </div>\n  </CheckoutPageContainer>\n);\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n  total: selectCartTotal,\n});\n\nexport default connect(mapStateToProps)(CheckoutPage);\n"],"sourceRoot":""}