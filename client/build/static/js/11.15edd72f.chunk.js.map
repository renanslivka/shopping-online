{"version":3,"sources":["pages/shop/shop.styles.js","pages/shop/shop.js"],"names":["ShopPageContainer","styled","div","CollectionsOverviewContainer","lazy","CollectionPageContainer","connect","dispatch","fetchCollectionsStart","match","useEffect","fallback","exact","path","component"],"mappings":"sRAEO,IAAMA,E,KAAoBC,EAAOC,IAAV,K,gBCKxBC,EAA+BC,gBAAK,kBACxC,iCAGIC,EAA0BD,gBAAK,kBACnC,iCA6BaE,sBAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,sBAAuB,kBAAMD,EAASC,mBAGzBF,EA1BE,SAAC,GAAsC,IAApCG,EAAmC,EAAnCA,MAAOD,EAA4B,EAA5BA,sBAKzB,OAJAE,qBAAU,WACRF,MACC,CAACA,IAGF,kBAACR,EAAD,KACE,kBAAC,WAAD,CAAUW,SAAU,kBAAC,IAAD,OAClB,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAI,UAAKJ,EAAMI,MACfC,UAAWX,IAEb,kBAAC,IAAD,CACEU,KAAI,UAAKJ,EAAMI,KAAX,kBACJC,UAAWT","file":"static/js/11.15edd72f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ShopPageContainer = styled.div`\r\n  width: 100%;\r\n  padding: 20px;\r\n`;\r\n","import React, { useEffect, lazy, Suspense } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { ShopPageContainer } from \"./shop.styles\";\nimport Spinner from \"../../components/spinner/spinner\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n\nconst CollectionsOverviewContainer = lazy(() =>\n  import(\"./../../components/collection-overview/collection-overview.container\")\n);\n\nconst CollectionPageContainer = lazy(() =>\n  import(\"./../collection/collection.container\")\n);\n\nconst ShopPage = ({ match, fetchCollectionsStart }) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, [fetchCollectionsStart]);\n\n  return (\n    <ShopPageContainer>\n      <Suspense fallback={<Spinner />}>\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPageContainer}\n        />\n      </Suspense>\n    </ShopPageContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"],"sourceRoot":""}